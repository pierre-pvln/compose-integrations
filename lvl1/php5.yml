#
# file:     php5.yml
# purpose:  Docker-compose yaml file for test php5 server
# author:   Pierre Veelen <pierre@pvln.nl>
# version:  2017-10-01 initial version
#
# required environment variables: 
#           ${MY_PLATFORM}
#           ${MY_CONTAINER_NAME}
#           ${MY_DOCKERFILE}
#           ${MY_LEVEL}
#           ${MY_BUILDER}

version: "3"

services: 

    php5service:

        ### builds on an other service
        ##extends:
        ##    service: apache2server
        ##    file: ./apache2.yml

        #what to build and where to find it
        #
        build: 
            context: ../../services/${MY_PLATFORM}/${MY_CONTAINER_NAME}
            #dockerfile: Dockerfile #generic version 
            #dockerfile:	Dockerfile-clean #clenaup version
            ##version wih php5 settings only
            dockerfile: ${MY_DOCKERFILE}
            
        #how to name and tag the image
        #
        #for example pvln/rpi3-lvl1-php5:1.0
        #         
        image: ${MY_BUILDER}/${MY_PLATFORM}-${MY_LEVEL}-${MY_CONTAINER_NAME}:1.0
        
        # port on host : port on container
        # 
        # ATTENTION: if ports are defined in lower level containers, 
        #            they have to be defined again in this container
        #
        ports:
        # for apache2 layer
        - "80:80"    
        
        # volume on host : volume in container
        #
        volumes:
        # for apache2 layer
        - APACHE2_DATA_VOLUME:/var/www/html
        - APACHE2_LOG_VOLUME:/var/log/apache2

        # values to pass to the container as environment variable
        # only available when container is run, not when container is build
        #        
        ##environment:
        ### set SOME_DUMMY to a variable from the compose host
        ##- SOME_DUMMY=${MY_PLATFORM}
        ### set to a specific value
        ##- ANOTHER_DUMMY='What a dummy single quotes'
        ##- AND_ANOTHER="What a dummy double quotes"
        ### resolved to their values on the machine Compose is running on
        ##- MY_WEB_DATA_VOLUME

 
 volumes:
    APACHE2_DATA_VOLUME:
        driver_opts:
            type: none 
            device: ${MY_WEB_DATA_VOLUME}
            o: bind
    APACHE2_LOG_VOLUME:
        driver_opts:
            type: none 
            device: ${MY_WEB_LOG_VOLUME}
            o: bind
            